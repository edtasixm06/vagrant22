    - name: Install LDAP client package
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop: "{{ debian.ldap.packages }}" 

    - name: Recursively remove directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop: "{{ debian.ldap.directories }}" 

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop: "{{ debian.ldap.directories }} "

    - name: Copy the slapd.conf file
      ansible.builtin.copy:
        src: "{{ debian.ldap.slapd.source }}"
        dest: "{{ debian.ldap.slapd.destination }}"

    - name: Copy the edt.org file
      ansible.builtin.copy:
        src: "{{ debian.ldap.ldif.source }}"
        dest: "{{ debian.ldap.ldif.destination }}"
          
    - name: Create dynamic configuration
      ansible.builtin.command: slaptest -f "{{ debian.ldap.slapd.destination  }}" -F "{{ debian.ldap.directories[0]}}"
      ignore_errors: yes

    - name: Populate ans list
      ansible.builtin.command: "{{ item }}"
      ignore_errors: yes
      loop:
        - slaptest -f /etc/ldap/slapd.conf -F /etc/ldap/slapd.d -u
        - slapadd  -F /etc/ldap/slapd.d -l /etc/ldap/edt-org.ldif
        - slapcat 

    - name: Recursively change ownership 
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        recurse: yes
        owner: "{{ debian.ldap.user }}"
        group: "{{ debian.ldap.group }}"
      loop: "{{ debian.ldap.directories }}"

    - name: Start service httpd, if not started
      ansible.builtin.service:
        name: slapd
        state: restarted

